(()=>{try {  const style = document.createElement("style");  style.textContent = `  #winrate-calculator-panel {    position:fixed; top:32px; right:32px; z-index:999999;    background:rgba(10,40,20,0.96);    color:#f4f4f4;    padding:20px 18px 14px 18px;    border-radius:15px;    font-family:'Segoe UI',Tahoma,Geneva,Verdana,sans-serif;    display:flex; flex-direction:column; min-width:290px; max-width:340px; box-shadow: 0 8px 32px 0 rgba(0,0,0,0.28);    border:1.5px solid #1c3c2f;    transition: box-shadow 0.2s;  }  #winrate-calculator-panel b, #winrate-calculator-panel strong { color:#ffe082 }  #winrate-calculator-panel select, #winrate-calculator-panel input[type="number"] {    background:rgba(255,255,255,0.12); color:white; border:none; border-radius:4px; padding:3px 7px; font-size:13px;  }  #winrate-calculator-panel .panel-header {    display:flex; justify-content:space-between; align-items:center;    margin-bottom:12px; padding-bottom:7px; border-bottom:1px solid #2a5a4f;  }  #winrate-calculator-panel .panel-section {    margin-bottom:14px;    background:rgba(0,0,0,0.18); border-radius:8px; padding:8px 10px 8px 10px;    font-size:12px; text-align:center;  }  #winrate-calculator-panel .stats-grid {    display:grid; grid-template-columns:1fr 1fr 1fr; gap:8px; margin-bottom:7px;  }  #winrate-calculator-panel .grid-2 {    display:grid; grid-template-columns:1fr 1fr; gap:8px; margin-bottom:7px;  }  #winrate-calculator-panel .stat-card {    background:rgba(0,0,0,0.22); border-radius:7px; padding:7px; text-align:center;    box-shadow:0 1px 12px 0 rgba(0,0,0,0.05);    transition:background .2s; cursor:default;  }  #winrate-calculator-panel .stat-card:hover { background:rgba(0,120,80,0.11);}  #winrate-calculator-panel .stat-label { font-size:10px; opacity:0.74;}  #winrate-calculator-panel .stat-value { font-size:15px; font-weight:bold; margin-top:2px;}  #winrate-calculator-panel .profit-pos { color:#aaff7b; }  #winrate-calculator-panel .profit-neg { color:#ff7b7b;}  #winrate-calculator-panel .stat-win { color:#90ff99}  #winrate-calculator-panel .stat-lose { color:#ff8787}  #winrate-calculator-panel .stat-draw { color:#6ec1ff}  #winrate-calculator-panel .resume-panel {    background:rgba(200,170,0,0.11); padding:7px; border-radius:7px; margin-bottom:10px; text-align:center;    font-size:12px;  }  #winrate-calculator-panel .resume-panel button {    margin:6px 2px 0 2px; padding:5px 14px; border:none; border-radius:6px; font-size:12px;    background:#14a800; color:#fff; font-weight:bold; cursor:pointer; transition:.18s;  }  #winrate-calculator-panel .resume-panel button#reset-btn {    background:#e53935;  }  #winrate-calculator-panel .resume-panel button:hover {    filter:brightness(1.15);  }  #winrate-calculator-panel .settings-btn {    width:100%;padding:9px 0;background:rgba(0,0,0,0.20);border:none;border-radius:7px;    color:white;cursor:pointer;display:flex;justify-content:center;align-items:center;gap:8px;margin-top:10px;    font-size:14px; font-weight:bold; letter-spacing:.2px; transition:.18s;  }  #winrate-calculator-panel .settings-btn:hover { background:rgba(0,0,0,0.32);}  #winrate-calculator-panel .settings-dropdown {    display:none; padding:10px 7px; background:rgba(0,0,0,0.16); border-radius:0 0 7px 7px; margin-top:-5px;    font-size:12px;  }  #winrate-calculator-panel .settings-dropdown.open { display:block; }  #winrate-calculator-panel .account-switch {    background:rgba(0,0,0,0.14);border-radius:7px;padding:7px 0;text-align:center;cursor:pointer;    display:flex;align-items:center;justify-content:center;gap:7px; font-size:13px;font-weight:bold;    margin-top:7px; margin-bottom:4px;    transition:.16s;  }  #winrate-calculator-panel .account-switch:hover { background:rgba(25,85,40,0.13);}  #winrate-calculator-panel .account-indicator {    width:23px;height:23px;display:flex;align-items:center;justify-content:center;    border-radius:50%;background:#007bff;color:#fff; font-weight:bold; font-size:15px;  }  #winrate-calculator-panel .account-indicator.demo { background:#00c853;}  #winrate-calculator-panel .copyright {    text-align:center;font-size:13px;opacity:.72;font-weight:bold;margin-top:12px;margin-bottom:0;    letter-spacing:.5px;  }  #mtx-hide-panel-btn {    position:absolute;top:6px;left:6px;cursor:pointer;font-size:14px;line-height:14px;    padding:2px 6px;border-radius:6px;background:rgba(0,0,0,0.25);z-index:2;    user-select:none; opacity:.78; transition:.15s;  }  #mtx-hide-panel-btn:hover { background:rgba(0,0,0,0.35); opacity:1;}  #toggle-floating-icon {    position:fixed;top:60px;right:16px;z-index:9999999;background:rgba(200,0,0,0.85);    color:white;padding:10px;border-radius:50%;font-size:23px;cursor:pointer;display:none;user-select:none;    box-shadow:0 1px 16px 0 rgba(0,0,0,0.24);  }  `;  document.head.appendChild(style);  const mainPanel = document.createElement("div");  mainPanel.id = "winrate-calculator-panel";  document.body.appendChild(mainPanel);  const LOCAL_STORAGE_KEY='trading_bot_state';  const ICON_POSITION_KEY='floating_icon_position';  const AUTOSTART_KEY='trading_bot_autostart_time';  const isAndroid=/android/i.test(navigator.userAgent);  const clamp=(val,min,max)=>Math.max(min,Math.min(val,max));  const formatter=new Intl.NumberFormat('id-ID',{style:'currency',currency:'IDR',minimumFractionDigits:0});  const STAKE_OPTIONS=[14000,15000,20000,30000];  let autostartHour = 0;  let autostartMinute = 1;  let autostartTriggered = false; // Supaya hanya trigger sekali per hari  function loadAutostart() {    try {      const obj = JSON.parse(localStorage.getItem(AUTOSTART_KEY));      if(obj && typeof obj.hour === 'number' && typeof obj.minute === 'number') {        autostartHour = clamp(obj.hour,0,23);        autostartMinute = clamp(obj.minute,0,59);      }    } catch {}  }  function saveAutostart() {    localStorage.setItem(AUTOSTART_KEY, JSON.stringify({hour: autostartHour, minute: autostartMinute}));  }  loadAutostart();  const defaultState={    stakeAwal:14000,    martingalePercentage:1.3,    maxMartingaleSteps:11,    currentIndex:0,    isRunning:false,    isWaiting:false,    nextAction:"buy",    actionLock:false,    totalModal:0,    totalProfit:0,    lastStake:0,    sessionModal:0,    actualProfit:0,    winCount:0,    loseCount:0,    drawCount:0,    accountType:'real',    lastWinPercentage:0,    targetProfit:1000000,    showSettings:false,    saldoUpdateInterval:null,    lastSaldoValue:0,    observerReady:false,    toastObserver:null,    tradeProcessed:false,    inputTimer:null,  };  const savedItem=localStorage.getItem(LOCAL_STORAGE_KEY);  const savedState=savedItem?JSON.parse(savedItem):{};  const state={...defaultState,...savedState};  function saveState(){    const stateToSave={stakeAwal:state.stakeAwal,martingalePercentage:state.martingalePercentage,      maxMartingaleSteps:state.maxMartingaleSteps,currentIndex:state.currentIndex,nextAction:state.nextAction,      totalModal:state.totalModal,actualProfit:state.actualProfit,lastStake:state.lastStake,      sessionModal:state.sessionModal,lastSaldoValue:state.lastSaldoValue,targetProfit:state.targetProfit,      winCount:state.winCount,loseCount:state.loseCount,drawCount:state.drawCount,accountType:state.accountType,      lastWinPercentage:state.lastWinPercentage};    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(stateToSave));  }  // ... Semua fungsi lain tetap ...  // PATCH: logika autostart baru, sekali per hari, waktu lokal browser  function tryAutoStartBot() {    const now = new Date();    const hour = now.getHours();    const minute = now.getMinutes();    if (!state.isRunning && !autostartTriggered &&        hour === autostartHour && minute === autostartMinute && !checkTargetProfit()) {      autostartTriggered = true;      state.isRunning = true;      state.actionLock = false;      state.isWaiting = true;      state.currentIndex = 0;      state.nextAction = "buy";      state.totalModal = 0;      state.sessionModal = 0;      state.actualProfit = 0;      state.winCount = 0;      state.loseCount = 0;      state.drawCount = 0;      state.lastSaldoValue = getSaldoValue();      updatePanel();      initToastObserver();      setTimeout(()=>{performTrade();},400);    }    // reset flag jika jam/minute sudah lewat    if (hour !== autostartHour || minute !== autostartMinute) {      autostartTriggered = false;    }  }  setInterval(tryAutoStartBot, 10000);  window.addEventListener('beforeunload',()=>{    if(state.toastObserver)state.toastObserver.disconnect();    clearInterval(state.saldoUpdateInterval);    saveState();  });  setInterval(saveState,30000);  // ... Sisa kode tetap ...} catch(e) {  alert("[BOT] Error di awal: " + e.message);}();